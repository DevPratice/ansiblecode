- name: Install and Configure DB
  hosts: TEST
  gather_facts: no
  tags:
    - DB
  become: yes
  vars:
    DBNAME: studentapp
    DBUSER: student
    DBPASS: student@1
  tasks:
    - name: Install MariadDB Server 
      package:
        name: mariadb-server
        state: latest

    - name: Start MariaDB Service
      service:
        name: mariadb
        state: started
        enabled: yes

    - name: "Create database -- {{DBNAME}}"
      mysql_db:
        name: "{{DBNAME}}"
        state: present

    - name: Copy the sql schema file to remote node
      template:
        src: files/student.sql.j2
        dest: /tmp/student.sql
      
    - name: Load sql schema
      mysql_db:
        name: all
        state: import
        target: /tmp/student.sql

    - name: Create db user
      mysql_user:
          name: "{{DBUSER}}"
          password: "{{DBPASS}}"
          priv: "{{DBNAME}}.*:ALL"
          state: present

- name: Install and Configure Tomcat 
  hosts: TEST
  become: yes
  gather_facts: no
  tags:
    - APP
  vars:
    TOMCAT_URL: http://www-us.apache.org/dist/tomcat/tomcat-8/v8.5.27/bin/apache-tomcat-8.5.27.tar.gz
    TOMCAT_BASE_DIR: /root
    JDBC_URL: https://github.com/cit-latex/stack/raw/master/mysql-connector-java-5.1.40.jar
    JDBC_FILE: mysql-connector-java-5.1.40.jar
    WAR_URL: https://github.com/cit-latex/stack/raw/master/student.war
    
  tasks:
    - name: Install Java
      package:
        name: java
        state: installed
    
    - name: Get Tar file from url
      shell: echo {{TOMCAT_URL}} | awk -F / '{print $NF}' | sed -e 's/.tar.gz//'
      register: out

    - name: Define tomcat directory Fact
      set_fact:
        TOMCAT_LOCATION: "{{TOMCAT_BASE_DIR}}/{{out.stdout}}"

    ### Commented because we can download and extract with next task
    #- name: Download tomcat
    #  get_url:
    #    url: "{{TOMCAT_URL}}"
    #    dest: "{{TOMCAT_TAR_FILE}}"

    - name: Check tomcat directory exists or not 
      stat:
        path: "{{TOMCAT_LOCATION}}"
      register: out 

    - name: Download tomcat and extact
      unarchive:
        src: "{{TOMCAT_URL}}"
        dest: "{{TOMCAT_BASE_DIR}}"
        remote_src: yes
      when: out.stat.exists == false 

    - name: Find webapps contents 
      find:
        paths: "{{TOMCAT_LOCATION}}/webapps"
        file_type: any 
      register: out 

    - name: Remove webapps contents 
      file: 
        path: "{{item.path}}"
        state: absent
      with_items: "{{out.files}}"
      
    - name: Download JDBC jar file 
      get_url: 
        url: "{{JDBC_URL}}"
        dest: "{{TOMCAT_LOCATION}}/lib/{{JDBC_FILE}}"

    - name: Download war file 
      get_url: 
        url: "{{WAR_URL}}"
        dest: "{{TOMCAT_LOCATION}}/webapps/student.war"
      



      



        